# bash completion for sceptre                              -*- shell-script -*-

_sceptre ()
{
    local cur prev words cword;
    _init_completion || return;

    local commands command options formats;

    # commands we'll complete
    commands="--version --debug --dir --output --no-colour --var --var-file
	--help continue-update-rollback create-change-set
	create-stack delete-change-set delete-env delete-stack
	describe-change-set describe-env describe-env-resources
	describe-stack-outputs describe-stack-resources execute-change-set
	generate-template get-stack-policy init launch-env launch-stack
	list-change-sets lock-stack set-stack-policy unlock-stack update-stack
	update-stack-cs validate-template";


    # retrieve possible stack values, provided that the recommended dir
    # structure is used
    function _stack()
    {
        local stack=$(find config/$prev/* -type f -name *.yaml -print0 \
	                  2>/dev/null | xargs -0 -I% basename %)
        COMPREPLY=($(compgen -W "${stack//.yaml/}" -- ${cur}))
    };

    # retrieve possible environment values
    function _env ()
    {
        local environment=$(find config/* -type d -print0 2>/dev/null |\
		                xargs -0 -I% basename %);
        COMPREPLY=($(compgen -W "${environment}" -- ${cur}))
    };

    # main
    if [[ $cword -eq 1 ]]; then
        COMPREPLY=($( compgen -W "$commands" -- "$cur" ));
    else
        command=${words[1]};
        case $prev in
            continue-update-rollback|create-change-set|create-stack|delete-change-set|delete-env|delete-stack|describe-change-set|describe-env|describe-env-resources|describe-stack-outputs|describe-stack-resources|execute-change-set|generate-template|get-stack-policy|launch-env|launch-stack|list-change-sets|lock-stack|set-stack-policy|unlock-stack|update-stack|update-stack-cs|validate-template)
                _env;
                return;
	    ;;
            init)
                COMPREPLY=($( compgen -W 'env project' -- "$cur" ));
                return;
            ;;
            --output)
                COMPREPLY=($( compgen -W 'json yaml' -- "$cur" ));
	        return;
            ;;
            --version|--debug|--no-colour|--dir|--var|--var-file|--help)
	        return;
            ;;
        esac;
        if [[ "$(find config/* -type d -print0 | xargs -0 -I% basename %)" =~ "$prev" ]]; then
            case $command in
                continue-update-rollback|create-change-set|create-stack|delete-change-set|delete-stack|describe-change-set|describe-stack-outputs|describe-stack-resources|execute-change-set|generate-template|get-stack-policy|launch-stack|list-change-sets|lock-stack|set-stack-policy|unlock-stack|update-stack|update-stack-cs|validate-template)
		    _stack
		    return;
                ;;
            esac;
        else
            return;
        fi;
    fi
}
complete -F _sceptre -o default sceptre
